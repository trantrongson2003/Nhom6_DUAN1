/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.View;

import com.mycompany.DomainModels.ChiTietSP;
import com.mycompany.DomainModels.HinhThucThanhToan;
import com.mycompany.DomainModels.HoaDon;
import com.mycompany.DomainModels.HoaDonChiTiet;
import com.mycompany.DomainModels.KhachHang;
import com.mycompany.DomainModels.NhanVien;
import com.mycompany.DomainModels.SanPham;
import com.mycompany.Service.ChiTietSPService;
import com.mycompany.Service.HTThanhToanService;
import com.mycompany.Service.HoaDonChiTietService;
import com.mycompany.Service.HoaDonService;
import com.mycompany.Service.IPM.CTSPSerivceIpm;
import com.mycompany.Service.IPM.HDCTServiceIpm;
import com.mycompany.Service.IPM.HTThanhToanServiceIpm;
import com.mycompany.Service.IPM.HoaDonServiceIpm;
import com.mycompany.Service.IPM.KHServiceIpm;
import com.mycompany.Service.KHService;
import com.mycompany.ViewModel.BanHang.GioHangViewModel;
import com.mycompany.ViewModel.BanHang.HoaDonViewModels;
import com.mycompany.ViewModel.BanHang.SanPhamViewModelBanHang;
import java.awt.Frame;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kunrl
 */
public class BanHangPanel extends javax.swing.JPanel {

    ChiTietSPService ctspService;
    HoaDonService hoaDonService;
    HoaDonChiTietService hoaDonChiTietService;
    KHService kHService;
    HTThanhToanService htttService;
    NhanVien nvView;
    int indexMaTrungGH;
    int indexMaTrungDSSP;
    public static String idFromKH = null;
    public static BanHangPanel banHangPanel;

    public static String idHDQRCode = null;
    public static String MaHDQRCode = null;

    private Date today = new Date();
    int soTrang, trang = 1;

    /**
     * Creates new form BansHangPanel
     */
    public BanHangPanel(NhanVien nv) {
        initComponents();
        nvView = nv;
        banHangPanel = this;
        ctspService = new CTSPSerivceIpm();
        hoaDonService = new HoaDonServiceIpm();
        hoaDonChiTietService = new HDCTServiceIpm();
        kHService = new KHServiceIpm();
        htttService = new HTThanhToanServiceIpm();
        if (ctspService.countSanPhamBanHang() % 5 == 0) {
            soTrang = ctspService.countSanPhamBanHang() / 5;
        } else {
            soTrang = ctspService.countSanPhamBanHang() / 5 + 1;
        }
        fillDSSP(1);
        fillHoaDon();
        lblSoTrangSP.setText("1");
        lblTongSoTrang.setText("1/" + soTrang);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUpMenu = new javax.swing.JPopupMenu();
        EditSoLuong = new javax.swing.JMenuItem();
        XoaSP = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pnThongTinChung = new javax.swing.JPanel();
        lblMaHD = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JLabel();
        lblNgayTao = new javax.swing.JLabel();
        txtNgayTao = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtSDTKH = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        btnXacNhanKH = new javax.swing.JButton();
        pnChiTiet = new javax.swing.JPanel();
        lblTongTien = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cbbHTTT = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtKhachTra = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChuTaiQuay = new javax.swing.JTextArea();
        btnThanhToan = new javax.swing.JButton();
        txtTongTien = new javax.swing.JLabel();
        txtTienTraLai = new javax.swing.JLabel();
        txtKhachCanTra = new javax.swing.JLabel();
        btnHuyHD = new javax.swing.JButton();
        txtKhachCK = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        btnChoThanhToan = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        lblMaHDDatHang = new javax.swing.JLabel();
        txtMaHDDatHang = new javax.swing.JLabel();
        lblHoTenKHDatHang = new javax.swing.JLabel();
        txtHoTenKHDatHang = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txtSDTKHDatHang = new javax.swing.JTextField();
        lblNgayTaoDatHang = new javax.swing.JLabel();
        lblDiaChiNhan = new javax.swing.JLabel();
        JScroll = new javax.swing.JScrollPane();
        txtDiaChiNhanHang = new javax.swing.JTextArea();
        txtNgayTaoDatHang = new javax.swing.JLabel();
        btnXacNhanKHDatHang = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNgayDuKien = new com.toedter.calendar.JDateChooser();
        jPanel7 = new javax.swing.JPanel();
        lblTongTienDatHang = new javax.swing.JLabel();
        lblSDTNguoiGiaoHang = new javax.swing.JLabel();
        lblHTTT = new javax.swing.JLabel();
        cbbHTTTDatHang = new javax.swing.JComboBox<>();
        lblGhiChuDatHang = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChuDatHang = new javax.swing.JTextArea();
        btnXacNhan = new javax.swing.JButton();
        btnGiaoHang = new javax.swing.JButton();
        btnHoanTra = new javax.swing.JButton();
        lblPhiShip = new javax.swing.JLabel();
        txtPhiShip = new javax.swing.JTextField();
        txtTongTienDatHang = new javax.swing.JLabel();
        txtSDTNguoiGiaoHang = new javax.swing.JTextField();
        txtKhachTraDatHang = new javax.swing.JTextField();
        txtKhachCanTraDatHang = new javax.swing.JLabel();
        lblKhachCanTra = new javax.swing.JLabel();
        lblKhachTra = new javax.swing.JLabel();
        txtKhachCKDatHang = new javax.swing.JTextField();
        lblKhachCK = new javax.swing.JLabel();
        lblTienTraLaiDatHang = new javax.swing.JLabel();
        txtTienTraLaiDatHang = new javax.swing.JLabel();
        pnHoaDon = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        rdoDangGiaoHang = new javax.swing.JRadioButton();
        rdoChoThanhToan = new javax.swing.JRadioButton();
        rdoChuaThanhToan = new javax.swing.JRadioButton();
        rdoTatCa = new javax.swing.JRadioButton();
        pnGioHang = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        btnQRCode = new javax.swing.JButton();
        btnTaoHD = new javax.swing.JButton();
        pnDSSanPham = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        txtTimKiemSPBh = new javax.swing.JTextField();
        lblTimKiem = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtKhoangGia1 = new javax.swing.JTextField();
        txtKhoangGia2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        lblSoTrangSP = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        lblTongSoTrang = new javax.swing.JLabel();

        EditSoLuong.setText("Edit Số Lượng");
        EditSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditSoLuongActionPerformed(evt);
            }
        });
        popUpMenu.add(EditSoLuong);

        XoaSP.setText("Xóa Sản Phẩm");
        XoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaSPActionPerformed(evt);
            }
        });
        popUpMenu.add(XoaSP);

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tạo hóa đơn"));

        pnThongTinChung.setBackground(new java.awt.Color(255, 255, 255));
        pnThongTinChung.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin chung"));

        lblMaHD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMaHD.setText("Mã HD");

        txtMaHD.setText("-------");

        lblNgayTao.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNgayTao.setText("Ngày tạo");

        txtNgayTao.setText("-------");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("SDT KH");

        txtSDTKH.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Họ tên KH");

        txtTenKH.setEnabled(false);

        btnXacNhanKH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXacNhanKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        btnXacNhanKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanKHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnThongTinChungLayout = new javax.swing.GroupLayout(pnThongTinChung);
        pnThongTinChung.setLayout(pnThongTinChungLayout);
        pnThongTinChungLayout.setHorizontalGroup(
            pnThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongTinChungLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnThongTinChungLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnThongTinChungLayout.createSequentialGroup()
                        .addGroup(pnThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNgayTao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMaHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(pnThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnThongTinChungLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(pnThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33))
                            .addGroup(pnThongTinChungLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(txtSDTKH)
                                .addGap(27, 27, 27)))
                        .addComponent(btnXacNhanKH)))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        pnThongTinChungLayout.setVerticalGroup(
            pnThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongTinChungLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaHD)
                    .addComponent(txtMaHD))
                .addGap(19, 19, 19)
                .addGroup(pnThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNgayTao)
                    .addComponent(lblNgayTao, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXacNhanKH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pnChiTiet.setBackground(new java.awt.Color(255, 255, 255));
        pnChiTiet.setBorder(javax.swing.BorderFactory.createTitledBorder("Chi tiết"));

        lblTongTien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTongTien.setText("Tổng tiền");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel19.setText("Hình thức thanh toán");

        cbbHTTT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vui lòng Chọn HTTT", "Tiền Mặt", "Chuyển Khoản", "Cả Hai" }));
        cbbHTTT.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbHTTTItemStateChanged(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel20.setText("Khách cần trả");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setText("Khách trả");

        txtKhachTra.setText("0.0");
        txtKhachTra.setEnabled(false);
        txtKhachTra.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtKhachTraCaretUpdate(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setText("Tiền Trả lại");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel23.setText("Ghi chú");

        txtGhiChuTaiQuay.setColumns(20);
        txtGhiChuTaiQuay.setRows(5);
        jScrollPane1.setViewportView(txtGhiChuTaiQuay);

        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        txtTongTien.setText("0.0");

        txtTienTraLai.setText("0.0");

        txtKhachCanTra.setText("0.0");

        btnHuyHD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHuyHD.setText("Hủy HD");
        btnHuyHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyHDActionPerformed(evt);
            }
        });

        txtKhachCK.setText("0.0");
        txtKhachCK.setEnabled(false);
        txtKhachCK.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtKhachCKCaretUpdate(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel33.setText("Khách CK");

        btnChoThanhToan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnChoThanhToan.setText("Chờ Thanh Toán");
        btnChoThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChoThanhToanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnChiTietLayout = new javax.swing.GroupLayout(pnChiTiet);
        pnChiTiet.setLayout(pnChiTietLayout);
        pnChiTietLayout.setHorizontalGroup(
            pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChiTietLayout.createSequentialGroup()
                .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnChiTietLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnChiTietLayout.createSequentialGroup()
                                    .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnChiTietLayout.createSequentialGroup()
                                            .addComponent(lblTongTien)
                                            .addGap(74, 74, 74)
                                            .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel23))
                                    .addGap(106, 106, 106))
                                .addGroup(pnChiTietLayout.createSequentialGroup()
                                    .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel19)
                                        .addComponent(jLabel21)
                                        .addComponent(jLabel20)
                                        .addComponent(jLabel33)
                                        .addComponent(jLabel22))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtTienTraLai, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtKhachCK)
                                            .addComponent(txtKhachTra)
                                            .addComponent(cbbHTTT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(pnChiTietLayout.createSequentialGroup()
                                                .addComponent(txtKhachCanTra, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnChiTietLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnChiTietLayout.createSequentialGroup()
                                .addComponent(btnChoThanhToan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHuyHD, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnChiTietLayout.setVerticalGroup(
            pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChiTietLayout.createSequentialGroup()
                .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTongTien)
                    .addComponent(lblTongTien))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(cbbHTTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtKhachCanTra))
                .addGap(18, 18, 18)
                .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(txtKhachCK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtTienTraLai))
                .addGap(18, 18, 18)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChoThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuyHD, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnThongTinChung, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnChiTiet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnThongTinChung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hóa đơn", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin chung"));

        lblMaHDDatHang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMaHDDatHang.setText("Mã HD");

        txtMaHDDatHang.setText("----------");

        lblHoTenKHDatHang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblHoTenKHDatHang.setText("Họ tên KH");

        txtHoTenKHDatHang.setEnabled(false);

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel29.setText("SDT");

        txtSDTKHDatHang.setEnabled(false);

        lblNgayTaoDatHang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNgayTaoDatHang.setText("Ngày tạo");

        lblDiaChiNhan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDiaChiNhan.setText("Địa chỉ nhận");

        txtDiaChiNhanHang.setColumns(20);
        txtDiaChiNhanHang.setRows(5);
        JScroll.setViewportView(txtDiaChiNhanHang);

        txtNgayTaoDatHang.setText("------------");

        btnXacNhanKHDatHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        btnXacNhanKHDatHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanKHDatHangActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Ngày Nhận Hàng");

        txtNgayDuKien.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lblDiaChiNhan)
                                .addGap(38, 38, 38)
                                .addComponent(JScroll))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lblNgayTaoDatHang)
                                .addGap(56, 56, 56)
                                .addComponent(txtNgayTaoDatHang, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNgayDuKien, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(102, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHoTenKHDatHang)
                            .addComponent(lblMaHDDatHang, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtHoTenKHDatHang, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(txtMaHDDatHang, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSDTKHDatHang))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXacNhanKHDatHang)
                        .addGap(29, 29, 29))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaHDDatHang)
                    .addComponent(lblMaHDDatHang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXacNhanKHDatHang)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHoTenKHDatHang)
                        .addComponent(txtHoTenKHDatHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(txtSDTKHDatHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNgayTaoDatHang)
                    .addComponent(txtNgayTaoDatHang))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblDiaChiNhan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNgayDuKien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Chi tiết"));

        lblTongTienDatHang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTongTienDatHang.setText("Tổng tiền");

        lblSDTNguoiGiaoHang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSDTNguoiGiaoHang.setText("SDT Shipper");

        lblHTTT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblHTTT.setText("Hình thức thanh toán");

        cbbHTTTDatHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vui Lòng Chọn HTTT", "Tiền Mặt", "Chuyển Khoản", "Cả Hai" }));
        cbbHTTTDatHang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbHTTTDatHangItemStateChanged(evt);
            }
        });

        lblGhiChuDatHang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblGhiChuDatHang.setText("Ghi chú");

        txtGhiChuDatHang.setColumns(20);
        txtGhiChuDatHang.setRows(5);
        jScrollPane2.setViewportView(txtGhiChuDatHang);

        btnXacNhan.setText("Xác nhân");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        btnGiaoHang.setText("Giao hàng");
        btnGiaoHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiaoHangActionPerformed(evt);
            }
        });

        btnHoanTra.setText("Hoàn trả");
        btnHoanTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHoanTraActionPerformed(evt);
            }
        });

        lblPhiShip.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPhiShip.setText("Phí ship");

        txtPhiShip.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtPhiShipCaretUpdate(evt);
            }
        });

        txtTongTienDatHang.setText("0.0");

        txtKhachTraDatHang.setText("0.0");
        txtKhachTraDatHang.setEnabled(false);
        txtKhachTraDatHang.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtKhachTraDatHangCaretUpdate(evt);
            }
        });

        txtKhachCanTraDatHang.setText("0.0");

        lblKhachCanTra.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblKhachCanTra.setText("Khách cần trả");

        lblKhachTra.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblKhachTra.setText("Khách trả");

        txtKhachCKDatHang.setText("0.0");
        txtKhachCKDatHang.setEnabled(false);
        txtKhachCKDatHang.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtKhachCKDatHangCaretUpdate(evt);
            }
        });

        lblKhachCK.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblKhachCK.setText("Khách CK");

        lblTienTraLaiDatHang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTienTraLaiDatHang.setText("Tiền trả lại");

        txtTienTraLaiDatHang.setText("0.0");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnGiaoHang, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHoanTra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPhiShip)
                                    .addComponent(lblTongTienDatHang)
                                    .addComponent(lblSDTNguoiGiaoHang))
                                .addGap(73, 73, 73)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTongTienDatHang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPhiShip)
                                    .addComponent(txtSDTNguoiGiaoHang)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblKhachTra)
                                    .addComponent(lblKhachCanTra)
                                    .addComponent(lblKhachCK)
                                    .addComponent(lblHTTT)
                                    .addComponent(lblTienTraLaiDatHang))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtTienTraLaiDatHang, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtKhachCKDatHang, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtKhachTraDatHang, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(46, 46, 46))
                                    .addComponent(txtKhachCanTraDatHang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbbHTTTDatHang, 0, 219, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblGhiChuDatHang)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPhiShip, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPhiShip, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTongTienDatHang)
                    .addComponent(txtTongTienDatHang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSDTNguoiGiaoHang)
                    .addComponent(txtSDTNguoiGiaoHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHTTT)
                    .addComponent(cbbHTTTDatHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKhachCanTra)
                    .addComponent(txtKhachCanTraDatHang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKhachTra)
                    .addComponent(txtKhachTraDatHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKhachCK)
                    .addComponent(txtKhachCKDatHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTienTraLaiDatHang)
                    .addComponent(txtTienTraLaiDatHang, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(lblGhiChuDatHang)
                        .addGap(0, 84, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnHoanTra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                    .addComponent(btnGiaoHang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXacNhan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Đặt hàng", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pnHoaDon.setBackground(new java.awt.Color(255, 255, 255));
        pnHoaDon.setBorder(javax.swing.BorderFactory.createTitledBorder("Hóa đơn chờ"));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã HD", "Ngày Tạo", "TenNV", "Trạng Thái"
            }
        ));
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblHoaDon);

        buttonGroup2.add(rdoDangGiaoHang);
        rdoDangGiaoHang.setText("Đang Giao Hàng");
        rdoDangGiaoHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDangGiaoHangActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdoChoThanhToan);
        rdoChoThanhToan.setText("Chờ Thanh Toán");
        rdoChoThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoChoThanhToanActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdoChuaThanhToan);
        rdoChuaThanhToan.setText("Chưa Thanh Toán");
        rdoChuaThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoChuaThanhToanActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdoTatCa);
        rdoTatCa.setSelected(true);
        rdoTatCa.setText("Tất Cả");
        rdoTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoTatCaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnHoaDonLayout = new javax.swing.GroupLayout(pnHoaDon);
        pnHoaDon.setLayout(pnHoaDonLayout);
        pnHoaDonLayout.setHorizontalGroup(
            pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnHoaDonLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnHoaDonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rdoTatCa)
                .addGap(31, 31, 31)
                .addComponent(rdoChuaThanhToan)
                .addGap(31, 31, 31)
                .addComponent(rdoChoThanhToan)
                .addGap(33, 33, 33)
                .addComponent(rdoDangGiaoHang)
                .addGap(42, 42, 42))
        );
        pnHoaDonLayout.setVerticalGroup(
            pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnHoaDonLayout.createSequentialGroup()
                .addGroup(pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoDangGiaoHang)
                    .addComponent(rdoChoThanhToan)
                    .addComponent(rdoChuaThanhToan)
                    .addComponent(rdoTatCa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnGioHang.setBackground(new java.awt.Color(255, 255, 255));
        pnGioHang.setBorder(javax.swing.BorderFactory.createTitledBorder("Giỏ hàng"));

        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã SP", "Tên SP", "Số Lượng", "Đơn Gía", "Thành Tiền", "Trạng Thái"
            }
        ));
        tblGioHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblGioHangMouseReleased(evt);
            }
        });
        jScrollPane5.setViewportView(tblGioHang);

        btnQRCode.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnQRCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qr-code.png"))); // NOI18N
        btnQRCode.setText("Quét mã");
        btnQRCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQRCodeActionPerformed(evt);
            }
        });

        btnTaoHD.setBackground(new java.awt.Color(102, 255, 102));
        btnTaoHD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTaoHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/icons/invoice.png"))); // NOI18N
        btnTaoHD.setText(" Tạo HD");
        btnTaoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnGioHangLayout = new javax.swing.GroupLayout(pnGioHang);
        pnGioHang.setLayout(pnGioHangLayout);
        pnGioHangLayout.setHorizontalGroup(
            pnGioHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGioHangLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTaoHD)
                .addGap(33, 33, 33)
                .addComponent(btnQRCode, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(pnGioHangLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 27, Short.MAX_VALUE))
        );
        pnGioHangLayout.setVerticalGroup(
            pnGioHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGioHangLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnGioHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnGioHangLayout.createSequentialGroup()
                        .addComponent(btnTaoHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1))
                    .addComponent(btnQRCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnDSSanPham.setBackground(new java.awt.Color(255, 255, 255));
        pnDSSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách sản phẩm"));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SP", "Tên SP", "Loại SP", "Màu Sắc", "Size", "Số Lượng", "Đơn Gía"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblSanPham);

        txtTimKiemSPBh.setText("Tìm Kiếm...");
        txtTimKiemSPBh.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTimKiemSPBhCaretUpdate(evt);
            }
        });
        txtTimKiemSPBh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTimKiemSPBhMouseClicked(evt);
            }
        });

        lblTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTimKiem.setText("Tìm kiếm sản phẩm");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N

        txtKhoangGia1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtKhoangGia1MouseClicked(evt);
            }
        });
        txtKhoangGia1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKhoangGia1ActionPerformed(evt);
            }
        });

        txtKhoangGia2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtKhoangGia2CaretUpdate(evt);
            }
        });
        txtKhoangGia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKhoangGia2ActionPerformed(evt);
            }
        });

        jLabel2.setText("đến");

        jLabel4.setText("Lọc Khoảng giá :");

        btnFirst.setText("<<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setText("<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        lblSoTrangSP.setText("1");

        btnNext.setText(">");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText(">>");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        lblTongSoTrang.setText("1/4");

        javax.swing.GroupLayout pnDSSanPhamLayout = new javax.swing.GroupLayout(pnDSSanPham);
        pnDSSanPham.setLayout(pnDSSanPhamLayout);
        pnDSSanPhamLayout.setHorizontalGroup(
            pnDSSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDSSanPhamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnDSSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDSSanPhamLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTimKiemSPBh, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtKhoangGia1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(txtKhoangGia2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(pnDSSanPhamLayout.createSequentialGroup()
                        .addComponent(lblTimKiem)
                        .addGap(47, 544, Short.MAX_VALUE))))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(pnDSSanPhamLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnFirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPrev)
                .addGap(18, 18, 18)
                .addComponent(lblSoTrangSP, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNext)
                .addGap(14, 14, 14)
                .addComponent(btnLast)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTongSoTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnDSSanPhamLayout.setVerticalGroup(
            pnDSSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDSSanPhamLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(lblTimKiem)
                .addGap(9, 9, 9)
                .addGroup(pnDSSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDSSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtKhoangGia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtKhoangGia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4))
                    .addGroup(pnDSSanPhamLayout.createSequentialGroup()
                        .addGroup(pnDSSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(txtTimKiemSPBh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnDSSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnPrev)
                    .addComponent(lblSoTrangSP)
                    .addComponent(btnNext)
                    .addComponent(btnLast)
                    .addComponent(lblTongSoTrang))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnDSSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnGioHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnHoaDon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnGioHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnDSSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        try {
            if (tblHoaDon.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Chưa có hóa đơn để chọn sản phẩm");
                return;
            }
            if (tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0).toString().equalsIgnoreCase("Đang Giao Hàng")) {
                JOptionPane.showMessageDialog(this, "Hóa đơn Đang Giao Hàng không thể chọn Mua");
                return;
            }
            int row = tblSanPham.getSelectedRow();

            Integer soLuong = null;
            Integer tongSoLuong = Integer.valueOf(tblSanPham.getValueAt(row, 5).toString());
            System.out.println(tongSoLuong);

            HoaDonChiTiet hdct = new HoaDonChiTiet();

            ChiTietSP sp = new ChiTietSP();

            String idSP = null;
            String idHD = null;

            HoaDon hd = new HoaDon();

            SanPham masp = new SanPham();

            ChiTietSP ctsp = new ChiTietSP();

            for (int i = 0; i < hoaDonService.getAllHD().size(); i++) {
                if (hoaDonService.getAllHD().get(i).getMa().equals(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0))) {
                    idHD = hoaDonService.getAllHD().get(i).getId();
                }
            }
            for (int i = 0; i < ctspService.getSPBanHang(trang).size(); i++) {
                if (ctspService.getSPBanHang(trang).get(i).getMaSP().equals(tblSanPham.getValueAt(row, 0))) {
                    idSP = ctspService.getSPBanHang(trang).get(i).getId();
                    masp.setMa(ctspService.getSPBanHang(trang).get(i).getMaSP());
                }
            }

            ctsp.setId(idSP);
            ctsp.setSanPham(masp);
            hd.setId(idHD);
            hdct.setChiTietSP(ctsp);
            hdct.setHoaDon(hd);
            Object slNhap = JOptionPane.showInputDialog("Vui Lòng Nhập Số Lượng");
            if (slNhap instanceof String) {
                soLuong = Integer.valueOf(slNhap.toString());
            } else {
                return;
            }
            if (soLuong < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập SL lớn hơn 0!");
                return;
            }
            if (soLuong > tongSoLuong) {
                JOptionPane.showMessageDialog(this, "Số Lượng bạn nhập đã lớn hơn Số Lượng trong Kho");
                return;
            }
            hdct.setSoLuong(soLuong);
            hdct.setDonGia(new BigDecimal(tblSanPham.getValueAt(row, 6).toString()));
            tongSoLuong -= soLuong;
            if (checkSPGH(hdct.getChiTietSP().getSanPham().getMa(), hoaDonChiTietService.getAllHDCT(txtMaHD.getText()))) {
                GioHangViewModel gh = hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(indexMaTrungGH);
                hdct.setSoLuong(gh.getSoLuong() + soLuong);
                hdct.setId(gh.getId());
                System.out.println(gh.getId());
                if (hoaDonChiTietService.updateSLHDCT(hdct) > 0) {
                    fillGioHang(txtMaHD.getText());
                    sp.setId(idSP);
                    sp.setSoLuong(tongSoLuong);
                    if (ctspService.updateSPKhiMua(sp) > 0) {
                        fillDSSP(trang);
                    }
                }
            } else {
                if (hoaDonChiTietService.addHDCT(hdct) > 0) {
                    fillGioHang(txtMaHD.getText());
                    sp.setId(idSP);
                    sp.setSoLuong(tongSoLuong);
                    if (ctspService.updateSPKhiMua(sp) > 0) {
                        fillDSSP(trang);
                    }
                }

            }
            DecimalFormat dmf = new DecimalFormat("####.####");
            Double tongTien = 0.0;
            for (int i = 0; i < hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).size(); i++) {
                tongTien += hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getThanhTien();
            }
            txtTongTien.setText(dmf.format(tongTien) + "");
            txtKhachCanTra.setText(dmf.format(tongTien) + "");
            txtTongTienDatHang.setText(dmf.format(tongTien) + "");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnTaoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHDActionPerformed
        try {
            HoaDon hd = new HoaDon();
            hd.setMaHD(zenMaHD(hoaDonService.getAllHDCheckMa()));
            hd.setNgayTao(new Date());
            hd.setNhanVien(nvView);
            hd.setTrangThai(0);
            if (hoaDonService.addHD(hd) > 0) {
                fillHoaDon();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnTaoHDActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        // TODO add your handling code here:
        try {
//            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
            DecimalFormat dmf = new DecimalFormat("####.####");
            Double tongTien = 0.0;
            Double tienTraHang = 0.0;
            List<HoaDonViewModels> lst = hoaDonService.getAllHD();
            showFormHD(tblHoaDon.getSelectedRow());
            fillGioHang(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0).toString());

            for (int i = 0; i < hoaDonService.getAllHD().size(); i++) {
                if (hoaDonService.getAllHD().get(i).getMa().equals(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0))) {
                    idHDQRCode = hoaDonService.getAllHD().get(i).getId();
                }
            }
            MaHDQRCode = txtMaHD.getText();

            HoaDonViewModels hoaDonViewModels = lst.get(tblHoaDon.getSelectedRow());

            if (hoaDonViewModels.getTrangThai().equals("Đang Giao Hang")) {
                txtSDTKHDatHang.setText(hoaDonViewModels.getKhachHang().getSdt());
                txtHoTenKHDatHang.setText(hoaDonViewModels.getKhachHang().getHoTen());
                txtDiaChiNhanHang.setText(hoaDonViewModels.getDiaChiNhan());
                txtNgayDuKien.setDate(hoaDonViewModels.getNgayNhanHang());
                txtPhiShip.setText(hoaDonViewModels.getPhiShip().doubleValue() + "");
                txtSDTNguoiGiaoHang.setText(hoaDonViewModels.getSDTNguoiGiaoHang());
                for (int i = 0; i < hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).size(); i++) {
                    if (hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getTrangThai().equals("")) {
                        tongTien += hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getThanhTien();
                    } else {
                        tienTraHang += hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getThanhTien();
                    }
                }
                txtTongTienDatHang.setText(dmf.format(tongTien) + "");
                txtKhachCanTraDatHang.setText(dmf.format(Double.parseDouble(txtTongTienDatHang.getText()) + Double.parseDouble(txtPhiShip.getText())) + "");
            } else {

                txtSDTKHDatHang.setText("");
                txtHoTenKHDatHang.setText("");
                txtDiaChiNhanHang.setText("");
                txtNgayDuKien.setDate(today);
                txtPhiShip.setText("");
                txtSDTNguoiGiaoHang.setText("");
                if (hoaDonViewModels.getKhachHang() == null) {
                    txtSDTKH.setText("");
                    txtTenKH.setText("");
                } else {
                    txtSDTKH.setText(hoaDonViewModels.getKhachHang().getSdt());
                    txtTenKH.setText(hoaDonViewModels.getKhachHang().getHoTen());
                }

                for (int i = 0; i < hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).size(); i++) {
                    tongTien += hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getThanhTien();
                }
                txtTongTien.setText(dmf.format(tongTien) + "");
                txtTongTienDatHang.setText(dmf.format(tongTien) + "");
                txtKhachCanTra.setText(txtTongTien.getText() + "");
                txtKhachCanTraDatHang.setText(txtTongTienDatHang.getText() + "");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void tblGioHangMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGioHangMouseReleased
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && tblGioHang.getSelectedRowCount() != 0) {
                popUpMenu.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_tblGioHangMouseReleased

    private void XoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaSPActionPerformed
        // TODO add your handling code here:
        try {
            int row = tblGioHang.getSelectedRow();
            if (row != -1) {
                Integer tongSoLuong = Integer.valueOf(tblGioHang.getValueAt(row, 2).toString());
                Integer soLuongSP = null;
                String idHDCT = null;
                String idCTSP = null;
                String maSP = null;
                for (int i = 0; i < hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).size(); i++) {
                    if (hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getMaSP().equals(tblGioHang.getValueAt(row, 0))) {
                        idHDCT = hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getId();
                        maSP = hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getMaSP();
                    }
                }
                if (checkDSSP(maSP, ctspService.getSPBanHang(trang))) {
                    SanPhamViewModelBanHang spView = ctspService.getSPBanHang(trang).get(indexMaTrungDSSP);
                    idCTSP = spView.getId();
                    soLuongSP = spView.getSoLunog() + tongSoLuong;
                }
                if (hoaDonChiTietService.deleteHDCTById(idHDCT) > 0) {
                    fillGioHang(txtMaHD.getText());
                    ChiTietSP ctsp = new ChiTietSP();
                    ctsp.setId(idCTSP);
                    ctsp.setSoLuong(soLuongSP);
                    if (ctspService.updateSPKhiMua(ctsp) > 0) {
                        fillDSSP(trang);
                    }
                }
            }
            DecimalFormat dmf = new DecimalFormat("####.####");
            Double tongTien = 0.0;
            for (int i = 0; i < hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).size(); i++) {
                tongTien += hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getThanhTien();
            }
            txtTongTien.setText(dmf.format(tongTien) + "");
            txtKhachCanTra.setText(dmf.format(tongTien) + "");
            txtTongTienDatHang.setText(dmf.format(tongTien) + "");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_XoaSPActionPerformed

    private void EditSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditSoLuongActionPerformed
        // TODO add your handling code here:
        try {
            int row = tblGioHang.getSelectedRow();
            if (row != -1) {

                Integer tongSoLuongGH = Integer.valueOf(tblGioHang.getValueAt(row, 2).toString());
                String idHDCT = null;
                Integer soLuong = null;
                Integer tongSLDSSP = null;
                Integer tongSLDSSP2 = null;
                String MaSP = null;
                HoaDonChiTiet hdct = new HoaDonChiTiet();
                ChiTietSP ctsp = new ChiTietSP();
                ChiTietSP ctsp2 = new ChiTietSP();

                for (int i = 0; i < hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).size(); i++) {
                    if (hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getMaSP().equals(tblGioHang.getValueAt(row, 0))) {
                        idHDCT = hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getId();
                        MaSP = hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getMaSP();
                    }
                }

                for (int i = 0; i < ctspService.getSPBanHang(trang).size(); i++) {
                    if (MaSP.equals(ctspService.getSPBanHang(trang).get(i).getMaSP())) {
                        SanPhamViewModelBanHang ctsp_View = ctspService.getSPBanHang(trang).get(i);
                        ctsp.setId(ctsp_View.getId());
                        tongSLDSSP = ctsp_View.getSoLunog();
                    }
                }

                Object slNhap = JOptionPane.showInputDialog("Vui lòng Nhập Số Lượng Cần Thêm");
                if (slNhap instanceof String) {
                    soLuong = Integer.valueOf(slNhap.toString());
                } else {
                    return;
                }

                if (soLuong > tongSLDSSP) {
                    JOptionPane.showMessageDialog(this, "Số Lượng Cần giảm lớn hơn Số Lượng đang có trong Giỏ Hang!");
                    return;
                }
                hdct.setId(idHDCT);

                ctsp.setSoLuong(tongSLDSSP + tongSoLuongGH);
                if (ctspService.updateSPKhiMua(ctsp) > 0) {
                    fillDSSP(trang);
                }
                if (soLuong <= 0) {
                    if (hoaDonChiTietService.deleteHDCTById(idHDCT) > 0) {
                        fillGioHang(txtMaHD.getText());
                        return;
                    }
                }
                for (int i = 0; i < ctspService.getSPBanHang(trang).size(); i++) {
                    if (MaSP.equals(ctspService.getSPBanHang(trang).get(i).getMaSP())) {
                        SanPhamViewModelBanHang ctsp_View = ctspService.getSPBanHang(trang).get(i);
                        ctsp2.setId(ctsp_View.getId());
                        tongSLDSSP2 = ctsp_View.getSoLunog();
                    }
                }
                hdct.setSoLuong(soLuong);
                ctsp2.setSoLuong(tongSLDSSP2 - soLuong);
                if (hoaDonChiTietService.updateSLHDCT(hdct) > 0) {
                    fillGioHang(txtMaHD.getText());
                    if (ctspService.updateSPKhiMua(ctsp2) > 0) {
                        fillDSSP(trang);
                    }
                }

            }
            DecimalFormat dmf = new DecimalFormat("####.####");
            Double tongTien = 0.0;
            for (int i = 0; i < hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).size(); i++) {
                tongTien += hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getThanhTien();
            }
            txtTongTien.setText(dmf.format(tongTien) + "");
            txtKhachCanTra.setText(dmf.format(tongTien) + "");
            txtTongTienDatHang.setText(dmf.format(tongTien) + "");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_EditSoLuongActionPerformed

    private void txtKhachTraCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtKhachTraCaretUpdate
        // TODO add your handling code here:
        try {
            DecimalFormat dmf = new DecimalFormat("####.####");
            double khachCanTra = Double.parseDouble(txtKhachCanTra.getText());
            double khachTra = Double.parseDouble(txtKhachTra.getText());
            double khachTraCK = Double.parseDouble(txtKhachCK.getText());
            if ((khachTra + khachTraCK) < khachCanTra) {
                txtTienTraLai.setText("0.0");
                return;
            }
            double tongTien = (khachTra + khachTraCK) - khachCanTra;
            txtTienTraLai.setText(dmf.format(tongTien) + "");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtKhachTraCaretUpdate

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        try {
            if (tblHoaDon.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Hóa đơn rồi mới thanh toán");
                return;
            }
            if (tblGioHang.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Giỏ Hàng đang trống không để Thanh Toán");
                return;
            }
            double khachCanTra = Double.parseDouble(txtKhachCanTra.getText());
            double khachTra = Double.parseDouble(txtKhachTra.getText());
            double khachTraCK = Double.parseDouble(txtKhachCK.getText());
            if ((khachTra + khachTraCK) < khachCanTra) {
                JOptionPane.showMessageDialog(this, "Số Tiền Khách Đưa nhỏ hơn Số Tiền cần Thanh Toán !");
                return;
            }
            String idHD = null;
            HoaDon hd = new HoaDon();
            KhachHang kh = new KhachHang();
            HinhThucThanhToan httt = new HinhThucThanhToan();
            kh.setId(idFromKH);
            for (int i = 0; i < hoaDonService.getAllHD().size(); i++) {
                if (hoaDonService.getAllHD().get(i).getMa().equals(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0))) {
                    idHD = hoaDonService.getAllHD().get(i).getId();
                }
            }

            hd.setId(idHD);

            hd.setTongTien(new BigDecimal(txtTongTien.getText()));
            hd.setKhachHang(kh);
            hd.setTrangThai(5);
            hd.setNgayThanhToan(new Date());
            hd.setGhiChu(txtGhiChuTaiQuay.getText());
            httt.setHoaDon(hd);
            if (cbbHTTT.getSelectedIndex() == 1) {
                httt.setLoaiThanhToan("Tiền Mặt");
                httt.setTongTien(new BigDecimal(khachTra));
                httt.setTrangThai(0);
                httt.setNgayThanhToan(new Date());
                htttService.addHTTT(httt);
            } else if (cbbHTTT.getSelectedIndex() == 2) {
                httt.setLoaiThanhToan("Chuyển Khoản");
                httt.setTongTien(new BigDecimal(khachTraCK));
                httt.setTrangThai(0);
                httt.setNgayThanhToan(new Date());
                htttService.addHTTT(httt);
            } else {
                HinhThucThanhToan httt2 = new HinhThucThanhToan();
                httt2.setHoaDon(hd);
                httt.setLoaiThanhToan("Tiền Mặt");
                httt.setTongTien(new BigDecimal(khachTra));
                httt.setTrangThai(0);
                httt.setNgayThanhToan(new Date());
                htttService.addHTTT(httt);
                httt2.setLoaiThanhToan("Chuyển Khoản");
                httt2.setTongTien(new BigDecimal(khachTraCK));
                httt2.setTrangThai(0);
                httt2.setNgayThanhToan(new Date());
                htttService.addHTTT(httt2);
            }
            if (hoaDonService.updateHD(hd) > 0) {
                JOptionPane.showMessageDialog(this, "Thanh Toán Thành Công!");
                int luaChon = JOptionPane.showConfirmDialog(this, "Bạn có muốn In Hóa Đơn không ?");
                if (luaChon == JOptionPane.YES_OPTION) {
                    new InHoaDon_JFrame().setVisible(true);
                    fillHoaDon();
                    fillGioHang("");
                    clearForm();
                } else {
                    fillHoaDon();
                    fillGioHang("");
                    clearForm();
                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnXacNhanKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanKHActionPerformed
        // TODO add your handling code here:
        new KhachHangBanHang_JFrame().setVisible(true);
    }//GEN-LAST:event_btnXacNhanKHActionPerformed

    private void btnQRCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQRCodeActionPerformed
        try {
            if (tblHoaDon.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Hóa Đơn để Quét Sản Phẩm");
                return;
            }
            QuetQRForm qr = new QuetQRForm();
            qr.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnQRCodeActionPerformed

    private void txtKhachCKCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtKhachCKCaretUpdate
        try {
            DecimalFormat dmf = new DecimalFormat("####.####");
            double khachCanTra = Double.parseDouble(txtKhachCanTra.getText());
            double khachTra = Double.parseDouble(txtKhachTra.getText());
            double khachTraCK = Double.parseDouble(txtKhachCK.getText());
            if ((khachTra + khachTraCK) < khachCanTra) {
                txtTienTraLai.setText("0.0");
                return;
            }
            double tongTien = (khachTra + khachTraCK) - khachCanTra;
            txtTienTraLai.setText(dmf.format(tongTien) + "");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtKhachCKCaretUpdate

    private void txtKhachTraDatHangCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtKhachTraDatHangCaretUpdate
        // TODO add your handling code here:
        try {
            DecimalFormat dmf = new DecimalFormat("####.####");
            double khachCanTra = Double.parseDouble(txtKhachCanTraDatHang.getText());
            double khachTra = Double.parseDouble(txtKhachTraDatHang.getText());
            double khachTraCK = Double.parseDouble(txtKhachCKDatHang.getText());
            if ((khachTra + khachTraCK) < khachCanTra) {
                txtTienTraLaiDatHang.setText("0.0");
                return;
            }
            double tongTien = (khachTra + khachTraCK) - khachCanTra;
            txtTienTraLaiDatHang.setText(dmf.format(tongTien) + "");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtKhachTraDatHangCaretUpdate

    private void txtKhachCKDatHangCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtKhachCKDatHangCaretUpdate
        try {
            DecimalFormat dmf = new DecimalFormat("####.####");
            double khachCanTra = Double.parseDouble(txtKhachCanTraDatHang.getText());
            double khachTra = Double.parseDouble(txtKhachTraDatHang.getText());
            double khachTraCK = Double.parseDouble(txtKhachCKDatHang.getText());
            if ((khachTra + khachTraCK) < khachCanTra) {
                txtTienTraLaiDatHang.setText("0.0");
                return;
            }
            double tongTien = (khachTra + khachTraCK) - khachCanTra;
            txtTienTraLaiDatHang.setText(dmf.format(tongTien) + "");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtKhachCKDatHangCaretUpdate

    private void btnHuyHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyHDActionPerformed
        try {
            if (tblHoaDon.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Hóa đơn Muốn Hủy");
                return;
            }
            if (tblGioHang.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Giỏ Hàng đang trống không để Hủy");
                return;
            }

            Integer soLuongGH = null;
            String maSPGH = null;
            String idSP = null;

            HoaDon hd = new HoaDon();
            Object traLoi = JOptionPane.showInputDialog(this, "Vui lòng nhập lý do Hủy !");
            if (traLoi instanceof String) {
                hd.setGhiChu(traLoi.toString());
                hd.setNgayThanhToan(new Date());
            } else {
                return;
            }

            for (int i = 0; i < hoaDonService.getAllHD().size(); i++) {
                if (hoaDonService.getAllHD().get(i).getMa().equals(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0))) {
                    hd.setId(hoaDonService.getAllHD().get(i).getId());
                }
            }

            for (int i = 0; i < hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).size(); i++) {
                ChiTietSP ctsp = new ChiTietSP();
                for (int j = 0; j < ctspService.getSPBanHang(trang).size(); j++) {
                    SanPhamViewModelBanHang sanPhamViewModelBanHang = ctspService.getSPBanHang(trang).get(i);
                    if (sanPhamViewModelBanHang.getMaSP().equals(hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getMaSP())) {
                        ctsp.setId(sanPhamViewModelBanHang.getId());
                        ctsp.setSoLuong((sanPhamViewModelBanHang.getSoLunog() + hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).get(i).getSoLuong()));
                    }
                }
                if (ctspService.updateSPKhiMua(ctsp) > 0) {
                    fillDSSP(trang);
                }
            }
            hd.setTongTien(new BigDecimal(txtTongTien.getText()));
            hd.setTrangThai(2);
            if (hoaDonChiTietService.deleteHDCTByIDHoaDon(hd.getId()) > 0) {
                if (hoaDonService.updateHD(hd) > 0) {
                    JOptionPane.showMessageDialog(this, "Hủy Hóa Đơn Thành Công!");
                    fillHoaDon();
                    fillGioHang("");
                    clearForm();
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnHuyHDActionPerformed

    private void cbbHTTTItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbHTTTItemStateChanged
        // TODO add your handling code here:
        if (cbbHTTT.getSelectedIndex() == 0) {
            txtKhachTra.setEnabled(false);
            txtKhachCK.setEnabled(false);
            txtKhachTra.setText("0.0");
            txtKhachCK.setText("0.0");
        } else if (cbbHTTT.getSelectedIndex() == 1) {
            txtKhachCK.setEnabled(false);
            txtKhachTra.setEnabled(true);
            txtKhachCK.setText("0.0");
        } else if (cbbHTTT.getSelectedIndex() == 2) {
            txtKhachTra.setEnabled(false);
            txtKhachCK.setEnabled(true);
            txtKhachTra.setText("0.0");

        } else {
            txtKhachTra.setEnabled(true);
            txtKhachCK.setEnabled(true);
            txtKhachTra.setText("0.0");
            txtKhachCK.setText("0.0");
        }
    }//GEN-LAST:event_cbbHTTTItemStateChanged

    private void cbbHTTTDatHangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbHTTTDatHangItemStateChanged
        // TODO add your handling code here:
        if (cbbHTTTDatHang.getSelectedIndex() == 0) {
            txtKhachTraDatHang.setEnabled(false);
            txtKhachCKDatHang.setEnabled(false);
            txtKhachTraDatHang.setText("0.0");
            txtKhachCKDatHang.setText("0.0");
        } else if (cbbHTTTDatHang.getSelectedIndex() == 1) {
            txtKhachCKDatHang.setEnabled(false);
            txtKhachTraDatHang.setEnabled(true);
            txtKhachCKDatHang.setText("0.0");
        } else if (cbbHTTTDatHang.getSelectedIndex() == 2) {
            txtKhachTraDatHang.setEnabled(false);
            txtKhachCKDatHang.setEnabled(true);
            txtKhachTraDatHang.setText("0.0");

        } else {
            txtKhachTraDatHang.setEnabled(true);
            txtKhachCKDatHang.setEnabled(true);
            txtKhachTraDatHang.setText("0.0");
            txtKhachCKDatHang.setText("0.0");

        }
    }//GEN-LAST:event_cbbHTTTDatHangItemStateChanged

    private void btnGiaoHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiaoHangActionPerformed
        // TODO add your handling code here:
        try {
            String chkSo = "^[0-9]{10}$";
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            if (tblHoaDon.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Hóa đơn để Giao Hàng");
                return;
            }
            if (tblGioHang.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Giỏ Hàng đang trống không để Giao Hàng");
                return;
            }
            if (txtSDTKHDatHang.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Vui lòng Nhập SDT");
                return;
            }
            if (txtHoTenKHDatHang.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Vui lòng Nhập Họ Tên Người Nhận");
                return;
            }
            if (txtDiaChiNhanHang.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Vui lòng Nhập Địa Chỉ Nhận Hàng");
                return;
            }
            if (txtDiaChiNhanHang.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Vui lòng Ngày Dự Kiến Giao Hàng");
                return;
            }
            if (txtPhiShip.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Vui lòng Phí Ship Giao Hàng");
                return;
            }
            if (txtSDTNguoiGiaoHang.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Vui lòng Nhập SDT Giao Hàng");
                return;
            }
            if (txtDiaChiNhanHang.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Vui lòng Nhập Địa Giao Hàng");
                return;
            }
            if (!txtSDTNguoiGiaoHang.getText().matches(chkSo)) {
                JOptionPane.showMessageDialog(this, "Vui lòng Nhập SDT Giao Hàng phải là Số và 10 Số!");
                return;
            }
            String idHD = null;
            HoaDon hd = new HoaDon();
            KhachHang kh = new KhachHang();
            HinhThucThanhToan httt = new HinhThucThanhToan();
            kh.setId(idFromKH);
            kh.setSdt(txtSDTKHDatHang.getText());
            kh.setHoTen(txtHoTenKHDatHang.getText());
            for (int i = 0; i < hoaDonService.getAllHD().size(); i++) {
                if (hoaDonService.getAllHD().get(i).getMa().equals(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0))) {
                    idHD = hoaDonService.getAllHD().get(i).getId();
                }
            }

            hd.setId(idHD);
            hd.setKhachHang(kh);
            hd.setTrangThai(3);
            hd.setNgayShip(new Date());

            hd.setNgayNhanHang(txtNgayDuKien.getDate());
            hd.setPhiShip(new BigDecimal(txtPhiShip.getText()));
            hd.setGhiChu(txtGhiChuDatHang.getText());
            hd.setDiaChiGiaoHang(txtDiaChiNhanHang.getText());
            hd.setSDTNguoiGiaoHang(txtSDTNguoiGiaoHang.getText());
            if (hoaDonService.updateHDDatHang(hd) > 0) {
                JOptionPane.showMessageDialog(this, "Giao Hàng Thành Công!");
                fillHoaDon();
                fillGioHang("");
                clearFormDatHang();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnGiaoHangActionPerformed

    private void btnXacNhanKHDatHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanKHDatHangActionPerformed
        // TODO add your handling code here:
        new KhachHangBanHang_JFrame().setVisible(true);
    }//GEN-LAST:event_btnXacNhanKHDatHangActionPerformed

    private void btnHoanTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHoanTraActionPerformed
        // TODO add your handling code here:
        try {
            if (tblHoaDon.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui long chon Hoa Don de Hoanf Tra");
                return;
            }
            if (tblGioHang.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui long chon San Pham Can Hoan Tra");
                return;
            }
            if (tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 3).toString().equalsIgnoreCase("Chưa Thanh Toán")
                    || tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 3).toString().equalsIgnoreCase("Chờ Thanh Toán")) {
                JOptionPane.showMessageDialog(this, "Hóa đơn ở trạng thái Giao Hàng mới dược Hoàn Trả");
                return;
            }
            Integer tongSLSP = null;
            Integer soLuongHienTai = Integer.valueOf(tblGioHang.getValueAt(tblGioHang.getSelectedRow(), 2).toString());
            BigDecimal donGia = null;
            HoaDonChiTiet hdct = new HoaDonChiTiet();
            ChiTietSP ctsp = new ChiTietSP();
            HoaDon hd = new HoaDon();
            for (int i = 0; i < hoaDonChiTietService.getAllHDCT(txtMaHDDatHang.getText()).size(); i++) {
                if (hoaDonChiTietService.getAllHDCT(txtMaHDDatHang.getText()).get(i).getMaSP().equals(tblGioHang.getValueAt(tblGioHang.getSelectedRow(), 0))) {
                    hdct.setId(hoaDonChiTietService.getAllHDCT(txtMaHDDatHang.getText()).get(i).getId());
                }
            }
            for (int i = 0; i < hoaDonService.getAllHD().size(); i++) {
                if (hoaDonService.getAllHD().get(i).getMa().equals(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0))) {
                    hd.setId(hoaDonService.getAllHD().get(i).getId());
                }
            }
            for (int i = 0; i < ctspService.getSPBanHang(trang).size(); i++) {
                if (ctspService.getSPBanHang(trang).get(i).getMaSP().equals(tblGioHang.getValueAt(tblGioHang.getSelectedRow(), 0))) {
                    SanPhamViewModelBanHang sanPhamViewModelBanHang = ctspService.getSPBanHang(trang).get(i);
                    ctsp.setId(sanPhamViewModelBanHang.getId());
                    tongSLSP = sanPhamViewModelBanHang.getSoLunog();
                    donGia = sanPhamViewModelBanHang.getDonGia();

                }
            }

            Object[] luaChon = {"Hoàn Trả 1 Phần", "Hoàn Trả Toàn Phần", "Thoát"};
            int kq = JOptionPane.showOptionDialog(this, "Mời bạn Chọn Hoàn Trả", "Hoàn Trả", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, luaChon, luaChon[0]);
            if (kq == JOptionPane.YES_OPTION) {
                Object SLHoanTra = JOptionPane.showInputDialog(this, "Mời Nhập Số Lượng Muốn Hoàn Trả");
                if (SLHoanTra instanceof String) {
                    Integer slNhap = Integer.valueOf(SLHoanTra.toString());
                    hdct.setSoLuong(soLuongHienTai - slNhap);
                    if (hoaDonChiTietService.updateSLHDCT(hdct) > 0) {
                        fillGioHang(txtMaHDDatHang.getText());
                        hdct.setHoaDon(hd);
                        hdct.setChiTietSP(ctsp);
                        hdct.setDonGia(donGia);
                        hdct.setSoLuong(slNhap);
                        hdct.setTrangThai(0);
                        if (hoaDonChiTietService.addHDCT(hdct) > 0) {
                            fillGioHang(txtMaHDDatHang.getText());
                            ctsp.setSoLuong(tongSLSP + slNhap);
                            if (ctspService.updateSPKhiMua(ctsp) > 0) {
                                fillDSSP(trang);
                            }
                        }
                    }
                } else {
                    return;
                }
            } else if (kq == JOptionPane.NO_OPTION) {
                hdct.setTrangThai(0);
                if (hoaDonChiTietService.updateHDCTTraHangToanPhan(hdct) > 0) {
                    fillGioHang(txtMaHDDatHang.getText());
                    ctsp.setSoLuong(tongSLSP + soLuongHienTai);
                    if (ctspService.updateSPKhiMua(ctsp) > 0) {
                        fillDSSP(trang);
                    }
                }
            }
            DecimalFormat dmf = new DecimalFormat("####.####");
            Double tongTien = 0.0;
            for (int i = 0; i < hoaDonChiTietService.getAllHDCT(txtMaHD.getText()).size(); i++) {
                if (hoaDonChiTietService.getAllHDCT(txtMaHDDatHang.getText()).get(i).getTrangThai().equals("")) {
                    tongTien += hoaDonChiTietService.getAllHDCT(txtMaHDDatHang.getText()).get(i).getThanhTien();
                }

            }
            txtTongTienDatHang.setText(dmf.format(tongTien) + "");
            txtKhachCanTraDatHang.setText(dmf.format(tongTien) + "");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnHoanTraActionPerformed

    private void txtPhiShipCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtPhiShipCaretUpdate
        try {
            DecimalFormat dmf = new DecimalFormat("####.####");
            double phiShip = Double.parseDouble(txtPhiShip.getText());
            double tongTien = Double.parseDouble(txtTongTienDatHang.getText());
            txtKhachCanTraDatHang.setText(dmf.format(tongTien + phiShip) + "");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtPhiShipCaretUpdate

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // TODO add your handling code here:
        try {
            if (tblHoaDon.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Hóa đơn rồi mới thanh toán");
                return;
            }
            if (tblGioHang.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Giỏ Hàng đang trống không để Thanh Toán");
                return;
            }
            if (tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 3).toString().equalsIgnoreCase("Chưa Thanh Toán")
                    || tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 3).toString().equalsIgnoreCase("Chờ Thanh Toán")) {
                JOptionPane.showMessageDialog(this, "Hóa đơn ở trạng thái Giao Hàng mới dược Xác Nhận");
                return;
            }
            double khachCanTra = Double.parseDouble(txtKhachCanTraDatHang.getText());
            double khachTra = Double.parseDouble(txtKhachTraDatHang.getText());
            double khachTraCK = Double.parseDouble(txtKhachCKDatHang.getText());
            if ((khachTra + khachTraCK) < khachCanTra) {
                JOptionPane.showMessageDialog(this, "Số Tiền Khách Đưa nhỏ hơn Số Tiền cần Thanh Toán !");
                return;
            }
            HoaDon hd = new HoaDon();
            HinhThucThanhToan httt = new HinhThucThanhToan();
            String idHD = null;
            for (int i = 0; i < hoaDonService.getAllHD().size(); i++) {
                if (hoaDonService.getAllHD().get(i).getMa().equals(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0))) {
                    idHD = hoaDonService.getAllHD().get(i).getId();
                }
            }
            hd.setId(idHD);
            hd.setNgayThanhToan(new Date());
            hd.setNgayDaNhanHang(new Date());
            hd.setTongTien(new BigDecimal(txtTongTienDatHang.getText()));
            hd.setTrangThai(4);
            httt.setHoaDon(hd);
            if (cbbHTTTDatHang.getSelectedIndex() == 1) {
                httt.setLoaiThanhToan("Tiền Mặt");
                httt.setTongTien(new BigDecimal(khachTra));
                httt.setTrangThai(0);
                httt.setNgayThanhToan(new Date());
                htttService.addHTTT(httt);
            } else if (cbbHTTTDatHang.getSelectedIndex() == 2) {
                httt.setLoaiThanhToan("Chuyển Khoản");
                httt.setTongTien(new BigDecimal(khachTraCK));
                httt.setTrangThai(0);
                httt.setNgayThanhToan(new Date());
                htttService.addHTTT(httt);
            } else {
                HinhThucThanhToan httt2 = new HinhThucThanhToan();
                httt2.setHoaDon(hd);
                httt.setLoaiThanhToan("Tiền Mặt");
                httt.setTongTien(new BigDecimal(khachTra));
                httt.setTrangThai(0);
                httt.setNgayThanhToan(new Date());
                htttService.addHTTT(httt);
                httt2.setLoaiThanhToan("Chuyển Khoản");
                httt2.setTongTien(new BigDecimal(khachTraCK));
                httt2.setTrangThai(0);
                httt2.setNgayThanhToan(new Date());
                htttService.addHTTT(httt2);
            }
            if (hoaDonService.updateHDDatHangThanhCong(hd) > 0) {
                JOptionPane.showMessageDialog(this, "Thanh Toán Thành Công!");
                fillHoaDon();
                fillGioHang("");
                clearFormDatHang();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void rdoChuaThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoChuaThanhToanActionPerformed
        try {
            if (rdoChuaThanhToan.isSelected()) {
                fillHoaDonByTrangThai(0);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_rdoChuaThanhToanActionPerformed

    private void rdoTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoTatCaActionPerformed
        try {
            if (rdoTatCa.isSelected()) {
                fillHoaDon();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_rdoTatCaActionPerformed

    private void rdoChoThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoChoThanhToanActionPerformed
        try {
            if (rdoChoThanhToan.isSelected()) {
                fillHoaDonByTrangThai(1);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_rdoChoThanhToanActionPerformed

    private void rdoDangGiaoHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDangGiaoHangActionPerformed
        try {
            if (rdoDangGiaoHang.isSelected()) {
                fillHoaDonByTrangThai(3);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_rdoDangGiaoHangActionPerformed

    private void txtTimKiemSPBhCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTimKiemSPBhCaretUpdate
        // TODO add your handling code here:
        if (txtTimKiemSPBh.getText().equals("")) {
            fillDSSP(1);
        } else {
            fillDSSPBySearch(txtTimKiemSPBh.getText());
        }
    }//GEN-LAST:event_txtTimKiemSPBhCaretUpdate

    private void txtTimKiemSPBhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTimKiemSPBhMouseClicked
        // TODO add your handling code here:
        try {
            txtTimKiemSPBh.setText("");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTimKiemSPBhMouseClicked

    private void txtKhoangGia2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtKhoangGia2CaretUpdate
        // TODO add your handling code here:
        try {
            if (txtKhoangGia1.getText().equals("")) {
//                txtKhoangGia2.setEnabled(false);
                fillDSSP(1);
            } else if (txtKhoangGia2.getText().equals("")) {
                fillDSSP(1);
            } else {
                fillDSSPByKhoangGia(new BigDecimal(txtKhoangGia1.getText()), new BigDecimal(txtKhoangGia2.getText()));
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtKhoangGia2CaretUpdate

    private void txtKhoangGia1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtKhoangGia1MouseClicked
        // TODO add your handling code here:
        try {

        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtKhoangGia1MouseClicked

    private void txtKhoangGia1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKhoangGia1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKhoangGia1ActionPerformed

    private void txtKhoangGia2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKhoangGia2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKhoangGia2ActionPerformed

    private void btnChoThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChoThanhToanActionPerformed
        // TODO add your handling code here:
        try {
            if (tblHoaDon.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Hóa đơn rồi mới thanh toán");
                return;
            }
            if (tblGioHang.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Giỏ Hàng đang trống không để Thanh Toán");
                return;
            }
//            double khachCanTra = Double.parseDouble(txtKhachCanTra.getText());
//            double khachTra = Double.parseDouble(txtKhachTra.getText());
//            double khachTraCK = Double.parseDouble(txtKhachCK.getText());
//            if ((khachTra + khachTraCK) < khachCanTra) {
//                JOptionPane.showMessageDialog(this, "Số Tiền Khách Đưa nhỏ hơn Số Tiền cần Thanh Toán !");
//                return;
//            }
            String idHD = null;
            HoaDon hd = new HoaDon();
            KhachHang kh = new KhachHang();
            kh.setId(idFromKH);
            for (int i = 0; i < hoaDonService.getAllHD().size(); i++) {
                if (hoaDonService.getAllHD().get(i).getMa().equals(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0))) {
                    idHD = hoaDonService.getAllHD().get(i).getId();
                }
            }

            hd.setId(idHD);
            hd.setTongTien(new BigDecimal(txtTongTien.getText()));
            hd.setKhachHang(kh);
            hd.setTrangThai(1);
            if (hoaDonService.updateHD(hd) > 0) {
                JOptionPane.showMessageDialog(this, "Hóa đơn đã chuyển sang Chờ Thanh Toán!");
                fillHoaDon();
                fillGioHang("");
                clearForm();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnChoThanhToanActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        if (trang <= soTrang) {
            trang++;
            fillDSSP(trang);
            lblSoTrangSP.setText("" + trang);
            lblTongSoTrang.setText(trang + "/" + soTrang);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        trang = 1;
        fillDSSP(trang);
        lblSoTrangSP.setText("" + trang);
        lblTongSoTrang.setText(trang + "/" + soTrang);
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        if (trang > 1) {
            trang--;
            fillDSSP(trang);
            lblSoTrangSP.setText("" + trang);
            lblTongSoTrang.setText(trang + "/" + soTrang);
        }
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        trang = soTrang;
        fillDSSP(trang);
        lblSoTrangSP.setText("" + trang);
        lblTongSoTrang.setText(trang + "/" + soTrang);
    }//GEN-LAST:event_btnLastActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem EditSoLuong;
    private javax.swing.JScrollPane JScroll;
    private javax.swing.JMenuItem XoaSP;
    private javax.swing.JButton btnChoThanhToan;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnGiaoHang;
    private javax.swing.JButton btnHoanTra;
    private javax.swing.JButton btnHuyHD;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnQRCode;
    private javax.swing.JButton btnTaoHD;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXacNhanKH;
    private javax.swing.JButton btnXacNhanKHDatHang;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbbHTTT;
    private javax.swing.JComboBox<String> cbbHTTTDatHang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblDiaChiNhan;
    private javax.swing.JLabel lblGhiChuDatHang;
    private javax.swing.JLabel lblHTTT;
    private javax.swing.JLabel lblHoTenKHDatHang;
    private javax.swing.JLabel lblKhachCK;
    private javax.swing.JLabel lblKhachCanTra;
    private javax.swing.JLabel lblKhachTra;
    private javax.swing.JLabel lblMaHD;
    private javax.swing.JLabel lblMaHDDatHang;
    private javax.swing.JLabel lblNgayTao;
    private javax.swing.JLabel lblNgayTaoDatHang;
    private javax.swing.JLabel lblPhiShip;
    private javax.swing.JLabel lblSDTNguoiGiaoHang;
    private javax.swing.JLabel lblSoTrangSP;
    private javax.swing.JLabel lblTienTraLaiDatHang;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JLabel lblTongSoTrang;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblTongTienDatHang;
    private javax.swing.JPanel pnChiTiet;
    private javax.swing.JPanel pnDSSanPham;
    private javax.swing.JPanel pnGioHang;
    private javax.swing.JPanel pnHoaDon;
    private javax.swing.JPanel pnThongTinChung;
    private javax.swing.JPopupMenu popUpMenu;
    private javax.swing.JRadioButton rdoChoThanhToan;
    private javax.swing.JRadioButton rdoChuaThanhToan;
    private javax.swing.JRadioButton rdoDangGiaoHang;
    private javax.swing.JRadioButton rdoTatCa;
    private javax.swing.JTable tblGioHang;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextArea txtDiaChiNhanHang;
    private javax.swing.JTextArea txtGhiChuDatHang;
    private javax.swing.JTextArea txtGhiChuTaiQuay;
    public static javax.swing.JTextField txtHoTenKHDatHang;
    private javax.swing.JTextField txtKhachCK;
    private javax.swing.JTextField txtKhachCKDatHang;
    public static javax.swing.JLabel txtKhachCanTra;
    private javax.swing.JLabel txtKhachCanTraDatHang;
    private javax.swing.JTextField txtKhachTra;
    private javax.swing.JTextField txtKhachTraDatHang;
    private javax.swing.JTextField txtKhoangGia1;
    private javax.swing.JTextField txtKhoangGia2;
    public static javax.swing.JLabel txtMaHD;
    private javax.swing.JLabel txtMaHDDatHang;
    private com.toedter.calendar.JDateChooser txtNgayDuKien;
    public static javax.swing.JLabel txtNgayTao;
    private javax.swing.JLabel txtNgayTaoDatHang;
    private javax.swing.JTextField txtPhiShip;
    public static javax.swing.JTextField txtSDTKH;
    public static javax.swing.JTextField txtSDTKHDatHang;
    private javax.swing.JTextField txtSDTNguoiGiaoHang;
    public static javax.swing.JTextField txtTenKH;
    private javax.swing.JLabel txtTienTraLai;
    private javax.swing.JLabel txtTienTraLaiDatHang;
    private javax.swing.JTextField txtTimKiemSPBh;
    public static javax.swing.JLabel txtTongTien;
    public static javax.swing.JLabel txtTongTienDatHang;
    // End of variables declaration//GEN-END:variables

    public void fillDSSP(int soTrang) {
        DefaultTableModel tblModel = (DefaultTableModel) tblSanPham.getModel();
        DecimalFormat dmf = new DecimalFormat("###.####");
        tblModel.setRowCount(0);
        for (SanPhamViewModelBanHang sp : ctspService.getSPBanHang(soTrang)) {
            tblModel.addRow(new Object[]{sp.getMaSP(), sp.getTenSP(), sp.getLoaiSP(), sp.getMauSac(), sp.getSize(), sp.getSoLunog(), dmf.format(sp.getDonGia())});
        }
    }

    public void fillDSSPBySearch(String timKiem) {
        DefaultTableModel tblModel = (DefaultTableModel) tblSanPham.getModel();
        tblModel.setRowCount(0);
        for (SanPhamViewModelBanHang sp : ctspService.getSPBanHangBySearch(timKiem)) {
            tblModel.addRow(new Object[]{sp.getMaSP(), sp.getTenSP(), sp.getLoaiSP(), sp.getMauSac(), sp.getSize(), sp.getSoLunog(), sp.getDonGia()});
        }
    }

    public void fillDSSPByKhoangGia(BigDecimal gia, BigDecimal gia2) {
        DefaultTableModel tblModel = (DefaultTableModel) tblSanPham.getModel();
        tblModel.setRowCount(0);
        for (SanPhamViewModelBanHang sp : ctspService.getSPBanHangByKhoangGia(gia, gia2)) {
            tblModel.addRow(new Object[]{sp.getMaSP(), sp.getTenSP(), sp.getLoaiSP(), sp.getMauSac(), sp.getSize(), sp.getSoLunog(), sp.getDonGia()});
        }
    }

    private void fillHoaDon() {
        DefaultTableModel tblModel = (DefaultTableModel) tblHoaDon.getModel();
        tblModel.setRowCount(0);
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        for (HoaDonViewModels hd : hoaDonService.getAllHD()) {
            tblModel.addRow(new Object[]{hd.getMa(), sdf.format(hd.getNgayTao()), hd.getTenNV(), hd.getTrangThai()});
        }
    }

    private void fillHoaDonByTrangThai(int tt) {
        DefaultTableModel tblModel = (DefaultTableModel) tblHoaDon.getModel();
        tblModel.setRowCount(0);
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        for (HoaDonViewModels hd : hoaDonService.getAllHDByTrangThai(tt)) {
            tblModel.addRow(new Object[]{hd.getMa(), sdf.format(hd.getNgayTao()), hd.getTenNV(), hd.getTrangThai()});
        }
    }

    public void fillGioHang(String maHd) {
        DefaultTableModel tblModel = (DefaultTableModel) tblGioHang.getModel();
        DecimalFormat dmf = new DecimalFormat("###.####");
        tblModel.setRowCount(0);
        for (GioHangViewModel gh : hoaDonChiTietService.getAllHDCT(maHd)) {

            tblModel.addRow(new Object[]{gh.getMaSP(), gh.getTenSP(), gh.getSoLuong(), gh.getDonGia(), dmf.format(gh.getThanhTien()), gh.getTrangThai()});
        }
    }

    public boolean checkSPGH(String maSP, List<GioHangViewModel> lst) {

        for (int i = 0; i < lst.size(); i++) {
            if (maSP.equals(lst.get(i).getMaSP())) {
                indexMaTrungGH = i;
                return true;
            }
        }
        return false;
    }

    public boolean checkDSSP(String maSP, List<SanPhamViewModelBanHang> lst) {

        for (int i = 0; i < lst.size(); i++) {
            if (maSP.equals(lst.get(i).getMaSP())) {
                indexMaTrungDSSP = i;
                return true;
            }
        }
        return false;
    }

    private void showFormHD(int row) {
        txtMaHD.setText(tblHoaDon.getValueAt(row, 0).toString());
        txtNgayTao.setText(tblHoaDon.getValueAt(row, 1).toString());
        txtMaHDDatHang.setText(tblHoaDon.getValueAt(row, 0).toString());
        txtNgayTaoDatHang.setText(tblHoaDon.getValueAt(row, 1).toString());
    }

    private void clearForm() {
        idFromKH = null;
        txtMaHD.setText("");
        txtNgayTao.setText("");
        txtKhachCanTra.setText("0.0");
        txtKhachTra.setText("");
        txtTongTien.setText("0.0");
        txtTienTraLai.setText("0.0");
        txtSDTKH.setText("");
        txtTenKH.setText("");

    }

    public void clearFormDatHang() {
        idFromKH = null;
        txtMaHDDatHang.setText("");
        txtNgayTaoDatHang.setText("");
        txtSDTKHDatHang.setText("");
        txtHoTenKHDatHang.setText("");
        txtDiaChiNhanHang.setText("");
        txtNgayDuKien.setDate(today);
        txtPhiShip.setText("");
        txtSDTNguoiGiaoHang.setText("");
        txtTongTienDatHang.setText("0.0");
        txtKhachCKDatHang.setText("0.0");
        txtKhachCanTraDatHang.setText("0.0");
        txtKhachTraDatHang.setText("0.0");
        txtTienTraLaiDatHang.setText("0.0");
        txtGhiChuDatHang.setText("");
    }

    public String zenMaHD(List<HoaDon> lst) {
        String maHD = "HD0";
        return maHD + (lst.size() + 1);
    }
}
